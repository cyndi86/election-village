// Generated by LiveScript 1.2.0
var now;
now = function($scope, $http){
  $scope.party2010 = {
    中國國民黨: 3501,
    民主進步黨: 583,
    綠黨: 1,
    親民黨: 1,
    中華統一促進黨: 2,
    台灣團結聯盟: 2,
    無: 10432
  };
  return $http({
    url: 'now.json',
    method: 'GET'
  }).success(function(d){
    var keyPair, res$, k, ref$, v, values, parties, pr2014, i$, len$, pr2010, partiesMinor, pr2014Minor, pr2010Minor, cadlist, cadname, cadvalue, cadhash, cadpair, cadpairname, cadpairvalue;
    $scope.data = d;
    console.log(d);
    res$ = [];
    for (k in ref$ = $scope.data.singleRate) {
      v = ref$[k];
      res$.push([k, v]);
    }
    keyPair = res$;
    keyPair = keyPair.map(function(it){
      return {
        raw: it,
        rate: parseInt(1000 * (it[1].single / it[1].all)) / 10
      };
    });
    keyPair.sort(function(a, b){
      return a.rate - b.rate;
    });
    values = keyPair.map(function(it){
      return it.rate;
    });
    c3.generate({
      bindto: '#single-rate',
      data: {
        columns: [["單選率"].concat(values)],
        types: {
          單選率: 'bar'
        }
      },
      axis: {
        x: {
          tick: {
            format: function(v){
              return keyPair[v].raw[0];
            }
          }
        },
        y: {
          tick: {
            format: function(v){
              return v + "%";
            }
          }
        }
      }
    });
    res$ = [];
    for (k in $scope.data.party) {
      res$.push(k);
    }
    parties = res$;
    parties.sort(function(a, b){
      return $scope.data.party[b] - $scope.data.party[a];
    });
    res$ = [];
    for (i$ = 0, len$ = parties.length; i$ < len$; ++i$) {
      k = parties[i$];
      res$.push($scope.data.party[k] || 0);
    }
    pr2014 = res$;
    res$ = [];
    for (i$ = 0, len$ = parties.length; i$ < len$; ++i$) {
      k = parties[i$];
      res$.push($scope.party2010[k] || 0);
    }
    pr2010 = res$;
    partiesMinor = (function(){
      var results$ = [];
      for (k in $scope.data.party) {
        results$.push(k);
      }
      return results$;
    }()).filter(function(it){
      return !(it === '中國國民黨' || it === '無' || it === '民主進步黨');
    });
    partiesMinor.sort(function(a, b){
      return $scope.data.party[b] - $scope.data.party[a];
    });
    res$ = [];
    for (i$ = 0, len$ = partiesMinor.length; i$ < len$; ++i$) {
      k = partiesMinor[i$];
      res$.push($scope.data.party[k] || 0);
    }
    pr2014Minor = res$;
    res$ = [];
    for (i$ = 0, len$ = partiesMinor.length; i$ < len$; ++i$) {
      k = partiesMinor[i$];
      res$.push($scope.party2010[k] || 0);
    }
    pr2010Minor = res$;
    c3.generate({
      bindto: '#party-rate',
      data: {
        columns: [["2010年"].concat(pr2010), ["2014年"].concat(pr2014)],
        type: 'bar'
      },
      axis: {
        x: {
          tick: {
            format: function(v){
              return parties[v];
            }
          }
        },
        y: {
          label: {
            text: "人數"
          }
        }
      }
    });
    c3.generate({
      bindto: '#party-rate-minor',
      data: {
        columns: [["2010年"].concat(pr2010Minor), ["2014年"].concat(pr2014Minor)],
        type: 'bar'
      },
      axis: {
        x: {
          tick: {
            format: function(v){
              return partiesMinor[v];
            }
          }
        },
        y: {
          label: {
            text: "人數"
          }
        }
      }
    });
    res$ = [];
    for (k in ref$ = $scope.data.cadcount) {
      v = ref$[k];
      res$.push([k, v]);
    }
    cadlist = res$;
    cadlist.sort(function(a, b){
      return b[1] - a[1];
    });
    cadlist = cadlist.splice(0, 20);
    cadname = cadlist.map(function(it){
      return it[0];
    });
    cadvalue = cadlist.map(function(it){
      return it[1];
    });
    c3.generate({
      bindto: '#compete',
      data: {
        columns: [["競爭人數"].concat(cadvalue)],
        type: 'bar'
      },
      axis: {
        x: {
          tick: {
            format: function(v){
              return cadname[v];
            }
          }
        },
        y: {
          label: {
            text: "人數"
          }
        }
      }
    });
    cadhash = {};
    res$ = [];
    for (k in ref$ = $scope.data.cadcount) {
      v = ref$[k];
      res$.push([k, v]);
    }
    cadlist = res$;
    cadlist.sort(function(a, b){
      return b[1] - a[1];
    });
    cadlist.map(function(it){
      return cadhash[it[1]] = (cadhash[it[1]] || 0) + 1;
    });
    res$ = [];
    for (k in cadhash) {
      v = cadhash[k];
      res$.push([k, v]);
    }
    cadpair = res$;
    cadpair.sort(function(a, b){
      return b[1] - a[1];
    });
    res$ = [];
    for (i$ = 0, len$ = cadpair.length; i$ < len$; ++i$) {
      v = cadpair[i$];
      res$.push(v[0]);
    }
    cadpairname = res$;
    res$ = [];
    for (i$ = 0, len$ = cadpair.length; i$ < len$; ++i$) {
      v = cadpair[i$];
      res$.push(v[1]);
    }
    cadpairvalue = res$;
    c3.generate({
      bindto: '#compete-stat',
      data: {
        columns: [["村里數"].concat(cadpairvalue)],
        type: 'bar'
      },
      axis: {
        x: {
          tick: {
            format: function(v){
              return cadpairname[v];
            }
          },
          label: {
            text: "人數"
          }
        },
        y: {
          label: {
            text: "村里數"
          }
        }
      }
    });
    return $('#party-rate svg text, #party-rate-minor svg text, #compete svg text').css({
      display: 'block'
    });
  });
};